package springstudy.daangnclone.mock;

import springstudy.daangnclone.user.domain.User;
import springstudy.daangnclone.user.domain.UserStatus;
import springstudy.daangnclone.user.service.port.UserRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakeUserRepository implements UserRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<User> data = new ArrayList<>();

    public User save(User user) {
        if (Objects.isNull(user.id())) {
            final User createUser = User.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(user.name())
                    .email(user.email())
                    .password(user.password())
                    .phoneNumber(user.phoneNumber())
                    .birthDate(user.birthDate())
                    .address(user.address())
                    .status(UserStatus.ACTIVE)
                    .createdAt(user.createdAt())
                    .build();
            data.add(createUser);
            return createUser;
        } else {
            data.removeIf(item -> Objects.equals(item.id(), user.id()));
            data.add(user);
            return user;
        }
    }

    public Optional<User> findByEmail(String email) {
        return data.stream()
                .filter(user -> user.email().equals(email))
                .findFirst();
    }
}
